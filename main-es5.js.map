{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.module.ts","webpack:///src/app/entities/PositionSettings.ts","webpack:///src/app/entities/positionData.ts","webpack:///src/app/main-ausloser/main-ausloser.component.ts","webpack:///src/app/main-ausloser/main-ausloser.component.html","webpack:///src/app/position/position.component.ts","webpack:///src/app/position/position.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppModule","injector","table","customElements","define","declarations","imports","providers","bootstrap","entryComponents","PositionSettings","name","marginLeft","marginTop","isSelected","Name","MarginLeft","MarginTop","IsSelected","PositionData","MainAusloserComponent","staticPossiblePositions","Array","reserveLeute","positions","possiblePositions","displaySettings","setupSettings","columns","window","innerHeight","innerWidth","settingsHeight","settingsWidth","possibleForSelection","marginLeftCounter","marginTopCounter","i","length","positionData","push","selectionMarginLeft","selectionMarginTop","positionSetting","find","x","clear","forEach","element","positionsContainerWidth","getColumns","count","random","Math","trunc","splice","fillPossiblePositions","saveSettings","generate","openSettings","selector","templateUrl","styleUrls","PositionComponent","isNumberShown","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injector } from '@angular/core';\nimport {createCustomElement} from '@angular/elements';\nimport { PositionComponent } from './position/position.component';\nimport { MainAusloserComponent } from './main-ausloser/main-ausloser.component';\n\n@NgModule({\n  declarations: [\n    PositionComponent,\n    MainAusloserComponent,\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [MainAusloserComponent],\n  entryComponents: [MainAusloserComponent]\n})\nexport class AppModule { \n  constructor(private injector:Injector){\n\n  }\n  ngDoBootstrap()\n  {\n    const table = createCustomElement(MainAusloserComponent, {injector: this.injector});\n    customElements.define('app-component',table);\n  }\n}\n","export class PositionSettings {\r\n    Name: string;\r\n    MarginLeft: string;\r\n    MarginTop: string;\r\n    IsSelected: boolean;\r\n\r\n    constructor(name: string, marginLeft: number,marginTop: number, isSelected: boolean)\r\n    {\r\n        this.Name = name;\r\n        this.MarginLeft = marginLeft+\"px\";\r\n        this.MarginTop = marginTop+\"px\";\r\n        this.IsSelected = isSelected;\r\n    }\r\n}","export class PositionData {\r\n    Name: string;\r\n    MarginLeft: string;\r\n    MarginTop: string;\r\n\r\n    constructor(name: string, marginLeft: number,marginTop: number)\r\n    {\r\n        this.Name = name;\r\n        this.MarginLeft = marginLeft+\"px\";\r\n        this.MarginTop = marginTop+\"px\";\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { PositionData } from '../entities/positionData';\nimport { PositionSettings } from '../entities/PositionSettings';\n\n@Component({\n  selector: 'main-ausloser',\n  templateUrl: './main-ausloser.component.html',\n  styleUrls: ['./main-ausloser.component.scss']\n})\nexport class MainAusloserComponent implements OnInit {\n\n  private staticPossiblePositions: Array<string> = new Array(\"GRKD\",\"MS\",\"MLD\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\");\n  private reserveLeute:number = 0;\n\n  public positions:Array<PositionData> = new Array<PositionData>();\n  private possiblePositions: Array<string> = new Array(\"GRKD\",\"MS\",\"MLD\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\");\n  public possibleForSelection: Array<PositionSettings>;\n  public displaySettings = false;\n\n  public selectionMarginLeft: string;\n  public selectionMarginTop: string;\n  public settingsHeight:string;\n  public settingsWidth:string;\n  public positionsContainerWidth:string;\n\n  ngOnInit(): void {\n   this.setupSettings(); \n  }\n\n  private setupSettings()\n  {\n    let columns: number;\n    \n    if(window.innerHeight > window.innerWidth)\n    {\n      this.settingsHeight = \"550px\";\n      this.settingsWidth = \"325px\";\n      columns = 3;\n    }\n    else\n    {\n      this.settingsHeight = \"324px\";\n      this.settingsWidth = \"520px\";\n      columns = 5;\n    }\n    this.possibleForSelection = new Array<PositionSettings>();\n\n    let marginLeftCounter:number = 0;\n    let marginTopCounter:number = 0;\n    for(let i:number =0; i<this.staticPossiblePositions.length;i++)\n    {\n      if((i%columns)==0 && i != 0)\n      {\n        marginTopCounter += 100;\n        marginLeftCounter = 0;\n      }\n      let positionData:PositionSettings = new PositionSettings(this.staticPossiblePositions[i],marginLeftCounter,marginTopCounter,true);\n      this.possibleForSelection.push(positionData);\n      marginLeftCounter += 100;\n    }\n\n    if(columns != 3)\n    {\n      this.selectionMarginLeft = (marginLeftCounter)+\"px\";\n      this.selectionMarginTop = (marginTopCounter)+\"px\";\n    }    \n    else\n    {\n      this.selectionMarginTop = (marginTopCounter+100)+\"px\";\n    }\n  }\n\n  public selectPositionSetting(positionSetting: PositionSettings)\n  {\n    this.possibleForSelection.find(x=> x.Name == positionSetting.Name).IsSelected = !positionSetting.IsSelected;\n  }\n\n  public saveSettings(reserveLeute: number)\n  {\n    this.reserveLeute = reserveLeute;\n    this.displaySettings = false;\n    this.clear();\n  }\n\n  private fillPossiblePositions()\n  {\n    this.possiblePositions = new Array<string>();\n    this.possibleForSelection.forEach(element => {\n      if(element.IsSelected)\n      {\n        this.possiblePositions.push(element.Name);\n      }\n    });\n  }\n\n  private getColumns():number\n  {\n    let columns: number;\n    if(window.innerHeight > window.innerWidth)\n    {\n      this.positionsContainerWidth = \"340px\";\n      columns = 3;\n    }\n    else\n    {\n      this.positionsContainerWidth = \"700px\";\n      columns = 6;\n    }\n    return columns;\n  }\n\n  public generate() {\n    this.clear();\n    \n    let columns: number = this.getColumns();\n    \n    if(this.reserveLeute>0)\n    {\n      for(let i:number = 0;i<this.reserveLeute;i++)\n      {\n        this.possiblePositions.push(\"RES\");\n      }\n    }\n\n    let count:number = this.possiblePositions.length;\n\n    let marginLeftCounter:number = 0;\n    let marginTopCounter:number = 0;\n    for(let i:number = 0; i<count;i++)\n    {\n      if((i%columns)==0 && i != 0)\n      {\n        marginTopCounter += 120;\n        marginLeftCounter = 0;\n      }\n      let random:number = Math.trunc(Math.random()*this.possiblePositions.length);\n      let positionData:PositionData = new PositionData(this.possiblePositions[random],marginLeftCounter,marginTopCounter);\n      this.positions.push(positionData);\n      this.possiblePositions.splice(random,1);\n      marginLeftCounter += 120;\n    }\n    \n  }\n\n  public clear() {\n    this.positions = new Array<PositionData>();\n    this.fillPossiblePositions();\n  }\n\n  public openSettings()\n  {\n    this.setupSettings();\n    this.displaySettings = true;\n  }\n\n}\n","<div>\n    <div class=\"overlay noselect\"\n    [ngStyle]=\"displaySettings && {'display':'block'}\">\n      <div class=\"overlay-content noselect\" \n      [ngStyle]=\"{'width':settingsWidth, 'height':settingsHeight}\">\n        \n        <div class=\"overlay-main noselect\">\n          <div style=\"margin-left: 2%;\" class=\"noselect\">\n                <div *ngFor=\"let pst of possibleForSelection\"\n                [ngStyle]=\"{'margin-left':pst.MarginLeft, 'margin-top':pst.MarginTop}\"\n                style=\"position: absolute;\"\n                class=\"noselect\">\n                  <div class=\"noselect\">\n                    <div (click)=\"selectPositionSetting(pst)\" class=\"noselect\" style=\"background:#0c71e4;height: 80px;width: 80px; border-radius: 3rem;text-align: center;line-height: 80px;font-size: 22px;\" *ngIf=\"pst.IsSelected\">\n                        {{pst.Name}}\n                    </div>\n                    <div (click)=\"selectPositionSetting(pst)\" class=\"noselect\" style=\"height: 80px;width: 80px;text-align: center;line-height: 80px;font-size: 22px;background:#cfcfcf;border-radius: 3rem;\" *ngIf=\"!pst.IsSelected\">\n                        {{pst.Name}}\n                    </div>\n                  </div>\n                </div> \n                <input \n                #reserveLeute \n                type=\"number\" \n                placeholder=\"RES\" \n                class=\"overlay-input\"\n                [ngStyle]=\"{'margin-left':selectionMarginLeft, 'margin-top':selectionMarginTop}\">\n            </div>\n        </div>\n        <br>\n        <table align=\"center\">\n          <tr>\n            <td>\n              <button (click)=\"saveSettings(reserveLeute.value)\" class=\"button\">Schließen</button>\n            </td>\n          </tr>\n        </table>\n        \n      </div>\n    </div>\n  \n    <div class=\"main-content\">\n\n    <table style=\"width: 100%;\">\n        <tr>\n            <td style=\"width: 33%;\">\n                <button (click)=\"generate()\" class=\"content-button\" style=\"margin-right: 10px;\" >Generieren</button>\n            </td>\n            <td style=\"width: 33%;\">\n                <button (click)=\"clear()\" class=\"content-button\" style=\"margin-right: 10px;\" >Clear</button>            \n            </td>\n            <td style=\"width: 33%;\">\n                <button (click)=\"openSettings()\" class=\"content-button\" style=\"margin-right: 10px;\" >Einstellungen</button>            \n            </td>\n        </tr>\n    </table>\n    \n    \n    \n    \n    <br><br> \n    <div style=\"text-align: center;\">\n\n    \n        <div \n        [ngStyle]=\"{'width':positionsContainerWidth}\"\n        style=\"margin:auto; display: inline-flex;\">\n            <position *ngFor=\"let pst of positions\"  class=\"circle\"\n            [ngStyle]=\"{'margin-left':pst.MarginLeft, 'margin-top':pst.MarginTop}\"\n            positionName = \"{{pst.Name}}\">\n            </position>\n        </div>\n    </div>\n        \n    </div>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'position',\n  templateUrl: './position.component.html',\n  styleUrls: ['./position.component.scss']\n})\nexport class PositionComponent implements OnInit {\n\n  @Input(\"positionName\")\n  public positionName:string;\n  \n  public isNumberShown:boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  showNumber()\n  {\n    this.isNumberShown = true;\n  }\n\n}\n","<div>\n    <div (click)=\"showNumber()\" style=\"background:#A50810;height: 100px;width: 100px; border-radius: 3rem;\" *ngIf=\"!isNumberShown\">\n    </div>\n    <div class=\"noselect\" style=\"height: 100px;width: 100px;text-align: center;line-height: 100px;font-size: 22px;background:#cfcfcf;border-radius: 3rem;\" *ngIf=\"isNumberShown\">\n        {{positionName}}\n    </div>\n</div>\n<br>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}